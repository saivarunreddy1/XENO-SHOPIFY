spring:
  application:
    name: xeno-shopify-service
  
  datasource:
    url: ${MYSQL_URL:jdbc:mysql://localhost:3306/xeno_shopify}
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_ROOT_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 60000
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: always

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
  http2:
    enabled: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:xeno-shopify-secret-key-2025-internship-assignment-super-secure-long-key-for-hs512-algorithm-minimum-64-characters-required}
  expiration: 86400000 # 24 hours in milliseconds

# Shopify Configuration
shopify:
  api:
    version: ${SHOPIFY_API_VERSION:2023-10}
    timeout: 30000 # 30 seconds

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://xeno-shopify-frontend.vercel.app,https://xeno-shopify-frontend.onrender.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Logging
logging:
  level:
    com.xeno.shopify: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: logs/xeno-shopify.log
